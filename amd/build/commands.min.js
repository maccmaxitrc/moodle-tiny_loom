define("tiny_loom/commands",["exports","./index","./options","editor_tiny/utils","./common","core/str"],(function(_exports,_index,_options,_utils,_common,_str){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;
/**
   * Commands helper for the Tiny Loom plugin.
   *
   * @module      tiny_loom/commands
   * @copyright   2023 Max MacCluer
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const handleAction=editor=>{const publicAppId=(0,_options.getPublicAppId)(editor);publicAppId?(0,_index.setup)({publicAppId:publicAppId}).then((setup=>showLoomDialogue(editor,setup))):console.warn("No Public App ID entered.")},showLoomDialogue=(editor,setup)=>{const dummyButton=document.createElement("button");setup.configureButton({element:dummyButton}).on("insert-click",(async video=>editor.insertContent(video.embedUrl))),dummyButton.click()};_exports.getSetup=async()=>{const[buttonText,buttonImage]=await Promise.all([(0,_str.get_string)("buttontitle",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.ui.registry.addButton(_common.buttonName,{icon:_common.icon,tooltip:"Record Screen",onAction:()=>handleAction(editor)}),editor.ui.registry.addMenuItem(_common.buttonName,{icon:_common.icon,text:buttonText,onAction:()=>handleAction(editor)})}}}));

//# sourceMappingURL=commands.min.js.map